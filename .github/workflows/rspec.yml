env:
  RUBY_VERSION: 3.0.0
  TEST_DB: eventy_test
  TEST_USER: postgres
  TEST_PASSWORD: postgres
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

name: Rails Specs
on: [push, pull_request]
jobs:
  rspec-test:
    name: RSpec
    runs-on: ubuntu-latest
    container:
      image: ruby:3.0.0

    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: ${{ env.TEST_USER }}
          POSTGRES_PASSWORD: ${{ env.TEST_PASSWORD }}
          POSTGRES_DB: ${{ env.TEST_DB }}

    steps:
      - uses: actions/checkout@v2

      - name: Gem cache
        id: cache-bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}

      - name: Bundle install
        env:
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: "Read Node.js version"
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: "Install Node.js"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      
      - name: Install yarn
        run: npm install -g yarn

      # FIXME: Yarn cache not working
      # - name: "Read Yarn cache directory path"
      #   id: yarn-cache-dir
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: "Setup caching for Yarn cache"
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ steps.yarn-cache-dir.outputs.dir }}
      #     key: yarn-${{ hashFiles('**/yarn.lock') }}
      
      - name: "Yarn install"
        run: yarn install

      - name: Copy DB Config
        run: cp config/database.yml.ci config/database.yml

      - name: Setup DB
        env:
          RAILS_ENV: test
          POSTGRES_HOST: postgres
        run: |
          bin/rails db:create db:schema:load
          bin/rails spec

      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
